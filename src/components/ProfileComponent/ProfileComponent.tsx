import React, { useState } from 'react';
import './ProfileComponent.scss';
import PhotoSlider from './PhotoSlider/PhotoSlider';
import SVGIcon from '../../assets/icons/svgComponent';
import TextAreaAutosize from 'react-textarea-autosize';
import companionAvatar from '../../assets/avatar/companionAvatar.png';

import { sliderProfiles } from '../../Data/SliderProfiles';

import { toggleToBlockUser, protectModalState, reportUserAvatar, reportUserName, setReportModal } from '../../store/ProtectSlice';

import { useDispatch } from 'react-redux';
import { shareProfileState } from '../../store/ShareProfileSlice';

const tagLabels = [
	{
		id: 1,
		name: '–ô–æ–≥–∞',
	},
	{
		id: 2,
		name: '–ú—É–∑—ã–∫–∞',
	},
	{
		id: 3,
		name: '–ö–æ—Ñ–µ',
	},
	{
		id: 4,
		name: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è',
	},
	{
		id: 5,
		name: '–î—É—Ö–æ–≤–Ω–æ—Å—Ç—å',
	},
	{
		id: 6,
		name: '–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä',
	},
	{
		id: 7,
		name: '–¢—Ä–∞–Ω—Å',
	},
	{
		id: 8,
		name: '–§—É—Ç–±–æ–ª',
	},
	{
		id: 9,
		name: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
	},
	{
		id: 10,
		name: '–î–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç',
	},
	{
		id: 11,
		name: '–ö—É–ª–∏–Ω–∞—Ä–∏—è',
	},
	{
		id: 12,
		name: '–§—É—Ç–±–æ–ª',
	}
]

const ProfileComponent = (props: any) => {
	const dispatch = useDispatch();

	const [showFullTags, setShowFullTags] = useState(false);

	const activeUser = sliderProfiles[0];
	const [inputValue, setInputValue] = useState('');

	return (
		<div className='ProfileComponent'>
			<PhotoSlider images={activeUser.images} />

			<div className='ProfileComponentInfo'>
				{props.profileVisibility && (
					<div
						className='ProfileComponentProfileToggler'
						aria-hidden="true"
						onClick={() => {
							props.sendDataToGamepad(false);
						}}
					>
						<SVGIcon name='arrowDown' size={6} width={11} />
					</div>
				)}
				<div className='ProfileComponentMainInfo'>
					<span className='name'>{activeUser.userName}</span>
					<span className='age'>{activeUser.userAge}</span>
					<SVGIcon name='fillVerification' size={16} />
				</div>
				<div className='ProfileComponentAdditionalInfo'>
					<ul>
						<li>
							<SVGIcon name='homeIcon' size={14} />
							<span>{activeUser.userLocation}</span>
						</li>
						<li>
							<SVGIcon name='distanceIcon' size={14} />
							<span>9 km from you</span>
						</li>
						<li>
							<SVGIcon name='tall' size={14} />
							<span>178 —Å–º</span>
						</li>
						<li>
							<SVGIcon name='femaleGender' size={14} />
							<span>–ì–µ—Ç–µ—Ä–æ –ñ–µ–Ω—â–∏–Ω–∞</span>
						</li>
					</ul>
				</div>
				<div className='ProfileComponentDescriptionInfo'>
					<p>{activeUser.userDescription}</p>
				</div>
				<div className='ProfileComponentSearching'>
					<span className='ProfileComponentSearchingBlock'>
						<span className='ProfileComponentSearchingIcon'>üíñ</span>
						<div className='ProfileComponentSearchingText'>
							<span className='ProfileComponentSearchingTitle'>–Ø –∏—â—é</span>
							<span className='ProfileComponentSearchingSubTitle'>–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä</span>
						</div>
					</span>
				</div>
				<div className='ProfileComponentSignInfo'>
					<div className='ProfileComponentTitle'>–û—Å–Ω–æ–≤–Ω–æ–µ</div>
					<ul className='ProfileComponentLabelsList'>
						<li>
							<div className='tag'>
								<SVGIcon name='signGemini' size={16} />
								<span>–ë–ª–∏–∑–Ω–µ—Ü—ã</span>
							</div>
						</li>
					</ul>
				</div>
				<div className='ProfileComponentStyleInfo'>
					<div className='ProfileComponentTitle'>–°—Ç–∏–ª—å –∂–∏–∑–Ω–∏</div>
					<ul className='ProfileComponentLabelsList'>
						<li>
							<div className='tag'>
								<SVGIcon name='wineIcon' size={16} />
								<span>–Ø –Ω–µ –ø—å—é</span>
							</div>
						</li>
						<li>
							<div className='tag'>
								<SVGIcon name='smokingIcon' size={16} />
								<span>–ù–µ –∫—É—Ä—é</span>
							</div>
						</li>
						<li>
							<div className='tag'>
								<SVGIcon name='gymIcon' size={16} />
								<span>–ß–∞—Å—Ç–æ</span>
							</div>
						</li>
						<li>
							<div className='tag'>
								<SVGIcon name='pizzaIcon' size={16} />
								<span>–î—Ä—É–≥–æ–µ</span>
							</div>
						</li>
						<li>
							<div className='tag'>
								<SVGIcon name='emailIcon' size={16} />
								<span>–ü—Ä–æ—Å—Ç–æ —Å–º–æ—Ç—Ä—é</span>
							</div>
						</li>
					</ul>
				</div>
				<div className='ProfileComponentInterestsInfo'>
					<div className='ProfileComponentTitle'>–ú–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã</div>
					<ul className='ProfileComponentLabelsList'>
						{tagLabels.map((label, index) => (
							<li key={label.id} className={index > 6 && !showFullTags ? 'hidden' : ''}>
								<div className='tag'>
									<span>{label.name}</span>
								</div>
							</li>
						))}
						{!showFullTags && (
							<li
								className='moreTag'
								aria-hidden="true"
								onClick={() => setShowFullTags(true)}
							>
								<div className='tag'>
									<SVGIcon name='arrowDown' size={12} />
								</div>
							</li>
						)}
					</ul>
				</div>
				<div className='ProfileComponentMessageBlock'>
					<div className='ProfileComponentMessageBlockTop'>
						<span className='ProfileComponentMessageIcon'>
							<div className='imageContainer'>
								<div className='imageBorder'></div>
								<img src={companionAvatar} alt='avatar' />
							</div>
							<SVGIcon name='writeMessageIcon' size={15} />
						</span>
						<span className='ProfileComponentMessageText'>
							<span className='ProfileComponentMessageTitle'>Jessica Black –∂–¥–µ—Ç —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è! </span>
							<span className='ProfileComponentMessageSubTitle'>–î–æ–±–∞–≤—å –µ–≥–æ –∫ —Å—É–ø–µ—Ä–ª–∞–π–∫—É –∏ —É–≤–µ–ª–∏—á—å —à–∞–Ω—Å—ã —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä—É –Ω–∞ 25%.</span>
						</span>
					</div>

					<TextAreaAutosize placeholder='–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...' value={inputValue} minRows={1} maxRows={4} onChange={(e) => setInputValue(e.target.value)} />
				</div>
				<div className='ProfileComponentButtons'>
					<span
						className='ProfileComponentButtonsBlock'
						aria-hidden="true"
						onClick={() => {
							dispatch(shareProfileState(true));
						}}
					>
						<span className='ProfileComponentButtonsIcon'>
							<SVGIcon name='shareProfile' size={20} />
						</span>
						<div className='ProfileComponentButtonsText'>
							<span className='ProfileComponentButtonsTitle'>–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ—Ñ–∏–ª–µ–º</span>
							<span className='ProfileComponentButtonsSubTitle'>–£–∑–Ω–∞–π, —á—Ç–æ –¥—É–º–∞—é—Ç –¥—Ä—É–∑—å—è.</span>
						</div>
					</span>
					<span
						className='ProfileComponentButtonsBlock'
						aria-hidden="true"
						onClick={() => {
							dispatch(protectModalState(true));
							dispatch(reportUserAvatar(companionAvatar));
							dispatch(reportUserName(activeUser.userName));
							dispatch(toggleToBlockUser());
						}}
					>
						<span className='ProfileComponentButtonsIcon'>
							<SVGIcon name='blockProfile' size={20} />
						</span>
						<div className='ProfileComponentButtonsText'>
							<span className='ProfileComponentButtonsTitle'>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å Jessica Black</span>
							<span className='ProfileComponentButtonsSubTitle'>–í—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞.</span>
						</div>
					</span>
					<span
						className='ProfileComponentButtonsBlock'
						aria-hidden="true"
						onClick={() => {
							dispatch(setReportModal(true));
							dispatch(reportUserAvatar(companionAvatar));
							dispatch(reportUserName(activeUser.userName));
						}}
					>
						<span className='ProfileComponentButtonsIcon'>
							<SVGIcon name='reportProfile' size={20} />
						</span>
						<div className='ProfileComponentButtonsText'>
							<span className='ProfileComponentButtonsTitle'>–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ Jessica Black</span>
							<span className='ProfileComponentButtonsSubTitle'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–± —ç—Ç–æ–º –Ω–µ —É–∑–Ω–∞–µ—Ç.</span>
						</div>
					</span>
				</div>
			</div>
		</div>
	);
};

export default ProfileComponent;
